module.exports = {
  rules: {
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": "off",
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/ban-tslint-comment": "off",
    "@typescript-eslint/ban-types": "error",
    // rules were imported from the regular es rules
    "@typescript-eslint/brace-style": ["error", "stroustrup", { "allowSingleLine": true }],
    "@typescript-eslint/class-literal-property-style": "off",
    "@typescript-eslint/comma-dangle": "off",
    "@typescript-eslint/comma-spacing": ["error", { "before": false, "after": true }],
    "@typescript-eslint/consistent-indexed-object-style": "off",
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/consistent-type-definitions": "off",
    "@typescript-eslint/consistent-type-imports": "off",
    "@typescript-eslint/default-param-last": "off",
    "@typescript-eslint/dot-notation": "off",
    "@typescript-eslint/explicit-function-return-type": "warn",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/func-call-spacing": ["error", "never"],
    "@typescript-eslint/indent": ["error", 2, { "SwitchCase": 1 }],
    "@typescript-eslint/init-declarations": "off",
    "@typescript-eslint/keyword-spacing": "off",
    "@typescript-eslint/lines-between-class-members": "off",
    "@typescript-eslint/member-delimiter-style": "error",
    "@typescript-eslint/member-ordering": "off",
    "@typescript-eslint/method-signature-style": "off",
    "@typescript-eslint/naming-convention": "off",
    "@typescript-eslint/no-array-constructor": ["error"],
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-confusing-non-null-assertion": "off",
    "@typescript-eslint/no-confusing-void-expression": "off",
    "@typescript-eslint/no-dupe-class-members": ["error"],
    "@typescript-eslint/no-dynamic-delete": "off",
    "@typescript-eslint/no-empty-function": ["error"],
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-extra-parens": ["off"],
    "@typescript-eslint/no-extra-semi": ["error"],
    "@typescript-eslint/no-extraneous-class": "off",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-implied-eval": ["error"],
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/no-invalid-this": "off",
    "@typescript-eslint/no-invalid-void-type": "off",
    "@typescript-eslint/no-loop-func": "off",
    "@typescript-eslint/no-loss-of-precision": "error",
    "@typescript-eslint/no-magic-numbers": ["off"],
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    // no additional linting when the developer has decided to use non null assertion
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-redeclare": "off",
    "@typescript-eslint/no-require-imports": "off",
    "@typescript-eslint/no-shadow": "off",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-throw-literal": ["error"],
    "@typescript-eslint/no-type-alias": "off",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "off",
    "@typescript-eslint/no-unnecessary-condition": "off",
    "@typescript-eslint/no-unnecessary-qualifier": "off",
    "@typescript-eslint/no-unnecessary-type-arguments": "off",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "off",
    "@typescript-eslint/no-unsafe-assignment": "error",
    // same as in @typescript-eslint/no-unsafe-member-access
    "@typescript-eslint/no-unsafe-call": "off",
    // lax usage of class members which are defined as any
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/no-unused-expressions": ["error"],
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "@typescript-eslint/no-use-before-define": ["warn"],
    "@typescript-eslint/no-useless-constructor": ["error"],
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/non-nullable-type-assertion-style": "off",
    "@typescript-eslint/object-curly-spacing": "off",
    "@typescript-eslint/prefer-as-const": "off",
    "@typescript-eslint/prefer-enum-initializers": "off",
    "@typescript-eslint/prefer-for-of": "off",
    "@typescript-eslint/prefer-function-type": "off",
    "@typescript-eslint/prefer-includes": "off",
    "@typescript-eslint/prefer-literal-enum-member": "off",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "off",
    "@typescript-eslint/prefer-optional-chain": "off",
    "@typescript-eslint/prefer-readonly": "off",
    "@typescript-eslint/prefer-readonly-parameter-types": "off",
    "@typescript-eslint/prefer-reduce-type-parameter": "off",
    "@typescript-eslint/prefer-regexp-exec": "off",
    "@typescript-eslint/prefer-string-starts-ends-with": "off",
    "@typescript-eslint/prefer-ts-expect-error": "off",
    "@typescript-eslint/promise-function-async": "off",
    "@typescript-eslint/quotes": ["error", "double"],
    "@typescript-eslint/require-array-sort-compare": "off",
    "@typescript-eslint/require-await": ["error"],
    // allow mixing types. e.g. age + " years"
    "@typescript-eslint/restrict-plus-operands": "off",
    // allow non string variables in template literal e.g. `is active: ${active}`
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/return-await": "off",
    "@typescript-eslint/semi": ["error", "always"],
    "@typescript-eslint/space-before-function-paren": ["off"],
    "@typescript-eslint/space-infix-ops": "off",
    "@typescript-eslint/strict-boolean-expressions": "off",
    "@typescript-eslint/switch-exhaustiveness-check": "off",
    "@typescript-eslint/triple-slash-reference": "error",
    "@typescript-eslint/type-annotation-spacing": "error",
    "@typescript-eslint/typedef": "off",
    "@typescript-eslint/unbound-method": "error",
    "@typescript-eslint/unified-signatures": "off",
    "@typescript-eslint/consistent-type-exports": "off",
    "@typescript-eslint/no-meaningless-void-operator": "off",
    "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "off",
    "@typescript-eslint/no-restricted-imports": "off",
    "@typescript-eslint/no-unsafe-argument": "error",
    "@typescript-eslint/padding-line-between-statements": "off",
    "@typescript-eslint/prefer-return-this-type": "off",
    "@typescript-eslint/consistent-generic-constructors": "off",
    "@typescript-eslint/no-duplicate-enum-values": "off",
    "@typescript-eslint/parameter-properties": "off",
    "@typescript-eslint/no-redundant-type-constituents": "off",
    "@typescript-eslint/no-useless-empty-export": "off",
    "@typescript-eslint/space-before-blocks": "off",
    // similar to the rule from 4-0.js (will be removed in combination with eslint-config-pv/prettier)
    "@typescript-eslint/block-spacing": ["error", "always"],
    // similar to the rule from 4-0.js (will be removed in combination with eslint-config-pv/prettier)
    "@typescript-eslint/key-spacing": ["warn", { "beforeColon": false, "afterColon": true }],
    // similar to the rule from 4-0.js (will be removed in combination with eslint-config-pv/prettier)
    "@typescript-eslint/lines-around-comment": ["warn", {
      "beforeBlockComment": true,
      "beforeLineComment": false,
      "allowClassStart": true,
      "allowObjectStart": true,
      "allowArrayStart": true,
    }],
    "@typescript-eslint/no-duplicate-type-constituents": "error",
    "@typescript-eslint/no-import-type-side-effects": "off",
    "@typescript-eslint/no-mixed-enums": "off",
    "@typescript-eslint/no-unsafe-declaration-merging": "error",
    "@typescript-eslint/no-unsafe-enum-comparison": "error",
    "@typescript-eslint/sort-type-constituents": "off",
  }
};
